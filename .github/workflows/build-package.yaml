name: Python Checks

# on:
#   push:
#     branches:
#       - main
on: [push]

jobs:
  build:
    name: Build and release distribution ðŸ“¦
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install pypa/build
        run: >-
                python3 -m
                pip install
                build
                --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: ib_cicd_dist
          path: dist/
      - name: Install package version reader
        run: >-
            curl -sSLf
            "$(curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest | grep browser_download_url | grep linux_amd64 | grep -v .gz | cut -d\" -f 4)"
            -L -o dasel
            && chmod +x dasel
      - name: Set package version
        id: python-package-version
        run: >-
             echo
             "PYTHON_PKG_VERSION=$(cat pyproject.toml | ./dasel -r toml '.project.version' | tr -d "'")"
             >> "$GITHUB_OUTPUT"
      - name: Get package path
        id: python-package-path
        run: >-
             echo
             "PYTHON_PKG_PATH=$(ls dist/*.whl)"
             >> "$GITHUB_OUTPUT"
      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        env:
          PYTHON_PKG_VERSION: ${{ steps.python-package-version.outputs.PYTHON_PKG_VERSION }}
          PYTHON_PKG_PATH: ${{ steps.python-package-path.outputs.PYTHON_PKG_PATH }}
        with:
          tag: ${{ env.PYTHON_PKG_VERSION }}
          artifacts: ${{ env.PYTHON_PKG_PATH }}
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
          makeLatest: true
